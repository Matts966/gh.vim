# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on: push
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        vim_type: ['Vim'] # , 'Neovim']
        version: ['head', 'stable']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        include:
          - vim_type: 'Vim'
            version: 'stable'
            vim_version: 'v8.2.0000'
    runs-on: '${{ matrix.os }}'
    steps:
      - uses: 'actions/checkout@v2'
      - uses: 'actions/checkout@v2'
        with:
          repository: thinca/vim-themis
          path: vim-themis
      - name: 'Setup Vim'
        id: 'vim'
        uses: 'thinca/action-setup-vim@v1'
        with:
          vim_version: '${{ matrix.vim_version || matrix.version }}'
          vim_type: '${{ matrix.vim_type }}'
      - name: Write gh cli config file for test and check path
        env:
          TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          import os
          import subprocess
          from os.path import expanduser

          process = subprocess.Popen(["gh", "auth", "login", "--with-token"], stdin=subprocess.PIPE)
          process.communicate(input=os.environ["TOKEN"].encode())
          retcode = process.poll()
          if retcode:
            exit(1)

          home = expanduser("~")
          with open(os.path.join(home, ".config", "gh", "hosts.yml")) as cfg:
            assert cfg.read()
        shell: python
      - name: Run unit tests with themis.vim
        env:
          THEMIS_VIM: ${{ steps.vim.outputs.executable }}
        run: ./vim-themis/bin/themis -r
